# Use this as a model for externally supplied properties/config
# see: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# set profile based on system environment variable ('env' or 'ENV')
# if it exists -> loads application-${env}.properties from spring.config.location directory, or classpath by default
# spring.profiles.active=test
# Disable JMX export of all endpoints or set unique-names-true
# if deploying multiple instances in the same JVM
#endpoints.jmx.unique-names=true
#endpoints.jmx.enabled=false
# default is 'shelf' in current directory
#kgrid.shelf.cdostore.filesystem.location=/shelf
#security
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health, info
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET

management.security.enabled=true
management.security.roles=ACTRADMIN
management.context-path=/actuator

spring.security.user.name=admin
spring.security.user.password=password

#spring-specific
server.port=${PORT:8080}
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent_output=true
cors.url=*
spring.banner.location=banner.txt
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
#kgrid-specific
kgrid.shelf.location=shelf
kgrid.shelf.cdostore.url=filesystem:file://${kgrid.shelf.location}
